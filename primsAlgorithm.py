{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"primsAlgorithm.ipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOYj4fQTQ54OqNOP1HeoDIy"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"K6Zk8XXkmdbs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"outputId":"9a7eb2ac-f790-4043-f387-fdb2a7a13ea3","executionInfo":{"status":"ok","timestamp":1583231075796,"user_tz":-330,"elapsed":929,"user":{"displayName":"Veda","photoUrl":"https://lh4.googleusercontent.com/-qbzCbQ6dXJA/AAAAAAAAAAI/AAAAAAAAAI8/Onl97rsjqfQ/s64/photo.jpg","userId":"07805742090640241985"}}},"source":["import sys \n","\n","class Graph(): \n","\n","  def __init__(self, vertices): \n","    self.V = vertices \n","    self.graph = [[0 for column in range(vertices)] for row in range(vertices)] \n","          \n","  def printMST(self, parent): \n","    print(\"Edge \\tWeight\")\n","    for i in range(1, self.V): \n","      print(parent[i], \"-\", i, \"\\t\", self.graph[i][ parent[i] ] )\n","\n","  def minKey(self, key, mstSet):  \n","    min = sys.maxsize \n","    for v in range(self.V): \n","      if key[v] < min and mstSet[v] == False: \n","        min = key[v] \n","        min_index = v \n","    return min_index \n","\n","  def primMST(self): \n","    key = [sys.maxsize] * self.V \n","    parent = [None] * self.V\n","    key[0] = 0\n","    mstSet = [False] * self.V \n","    parent[0] = -1 \n","    for cout in range(self.V): \n","      u = self.minKey(key, mstSet) \n","      mstSet[u] = True\n","      for v in range(self.V): \n","        if self.graph[u][v] > 0 and mstSet[v] is False and key[v] > self.graph[u][v]: \n","            key[v] = self.graph[u][v] \n","            parent[v] = u \n","    self.printMST(parent) \n","\n","\n","g = Graph(9) \n","g.graph = [[0, 4, 0, 0, 0, 0, 0, 8, 0],\n","           [4, 0, 8, 0, 0, 0, 0, 11, 0],\n","           [0, 8, 0, 7, 0, 4, 0, 0, 2],\n","           [0, 0, 7, 0, 9, 14, 0, 0, 2],\n","           [0, 0, 0, 9, 0, 10, 0, 0, 0],\n","           [0, 0, 4, 14, 10, 0, 2, 0, 0],\n","           [0, 0, 0, 0, 0, 2, 0, 1, 6],\n","           [8, 11, 0, 0, 0, 0, 1, 0, 7],\n","           [0, 0, 2, 0, 0, 0, 6, 7, 0]]\n","g.primMST(); \n"],"execution_count":8,"outputs":[{"output_type":"stream","text":["Edge \tWeight\n","0 - 1 \t 4\n","1 - 2 \t 8\n","2 - 3 \t 7\n","3 - 4 \t 9\n","2 - 5 \t 4\n","5 - 6 \t 2\n","6 - 7 \t 1\n","2 - 8 \t 2\n"],"name":"stdout"}]}]}